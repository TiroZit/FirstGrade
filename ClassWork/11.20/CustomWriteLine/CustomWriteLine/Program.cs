using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace CustomWriteLine
{
    class Program
    {
        static int[,] matrixA = // 10 x 10
                {
                {0,0,0,0,0,0,1,1,0,0},
                {0,0,0,0,0,1,1,1,0,0},
                {0,0,0,0,1,0,1,1,0,0},
                {0,0,0,1,0,0,1,1,0,0},
                {0,0,1,0,0,0,1,1,0,0},
                {0,1,0,0,0,0,1,1,0,0},
                {0,1,1,1,1,1,1,1,0,0},
                {0,1,0,0,0,0,1,1,0,0},
                {0,1,0,0,0,0,1,1,0,0},
                {0,1,0,0,0,0,1,1,0,0}
        };
        static int[,] matrixF = //10x10
                	{
                {0,0,1,1,1,1,1,1,0,0},
                {0,0,1,1,0,0,0,0,0,0},
                {0,0,1,1,0,0,0,0,0,0},
                {0,0,1,1,0,0,0,0,0,0},
                {0,0,1,1,0,0,0,0,0,0},
                {0,0,1,1,1,1,1,0,0,0},
                {0,0,1,1,0,0,0,0,0,0},
                {0,0,1,1,0,0,0,0,0,0},
                {0,0,1,1,0,0,0,0,0,0},
                {0,0,1,1,0,0,0,0,0,0}
            };
        static int[,] matrixN =
                    {
                {1,0,0,0,0,0,0,0,0,1},
                {1,1,0,0,0,0,0,0,0,1},
                {1,0,1,0,0,0,0,0,0,1},
                {1,0,0,1,0,0,0,0,0,1},
                {1,0,0,0,1,0,0,0,0,1},
                {1,0,0,0,0,1,0,0,0,1},
                {1,0,0,0,0,0,1,0,0,1},
                {1,0,0,0,0,0,0,1,0,1},
                {1,0,0,0,0,0,0,0,1,1},
                {1,0,0,0,0,0,0,0,0,1}
            };
        static int[,] matrixH = // 10x10
              	{
               { 1,0,0,0,0,0,0,0,0,1 },
               { 1,0,0,0,0,0,0,0,0,1 },
               { 1,0,0,0,0,0,0,0,0,1 },
               { 1,0,0,0,0,0,0,0,0,1 },
               { 1,1,1,1,1,1,1,1,1,1 },
               { 1,0,0,0,0,0,0,0,0,1 },
               { 1,0,0,0,0,0,0,0,0,1 },
               { 1,0,0,0,0,0,0,0,0,1 },
               { 1,0,0,0,0,0,0,0,0,1 },
               { 1,0,0,0,0,0,0,0,0,1 }

            };
        static int[,] matrixM =  // 10 x 10
               	{
                {1,0,0,0,0,0,0,0,0,1 },
                {1,1,0,0,0,0,0,0,1,1 },
                {1,0,1,0,0,0,0,1,0,1 },
                {1,0,0,1,0,0,1,0,0,1 },
                {1,0,0,0,1,1,0,0,0,1 },
                {1,0,0,0,0,0,0,0,0,1 },
                {1,0,0,0,0,0,0,0,0,1 },
                {1,0,0,0,0,0,0,0,0,1 },
                {1,0,0,0,0,0,0,0,0,1 },
                {1,0,0,0,0,0,0,0,0,1 }

            };
        static int[,] matrixO = //10x10
    	{
                {0,0,0,1,1,1,1,0,0,0 },
                {0,0,1,0,0,0,0,1,0,0 },
                {0,1,0,0,0,0,0,0,1,0 },
                {0,1,0,0,0,0,0,0,1,0 },
                {0,1,0,0,0,0,0,0,1,0 },
                {0,1,0,0,0,0,0,0,1,0 },
                {0,1,0,0,0,0,0,0,1,0 },
                {0,1,0,0,0,0,0,0,1,0 },
                {0,0,1,0,0,0,0,1,0,0 },
                {0,0,0,1,1,1,1,0,0,0 }
            };
        static int[,] matrixQ =  // 10 x 10  	 
                	{
                {0,0,0,0,1,0,0,0,0,0},
                {0,0,0,1,0,1,0,0,0,0},
                {0,0,1,0,0,0,1,0,0,0},
                {0,1,0,0,0,0,0,1,0,0},
                {1,0,0,0,0,0,0,0,1,0},
                {0,1,0,0,0,0,0,1,0,0},
                {0,0,1,0,0,0,1,0,0,0},
                              {0,0,0,0,0,1,1,1,0,0},
            };
        static int[,] matrixD = // 10 x 10
                	{
                {0,1,1,1,1,1,0,0,0,0 },
                {0,1,0,0,0,0,1,0,0,0 },
                {0,1,0,0,0,0,0,1,0,0 },
                {0,1,0,0,0,0,0,0,1,0 },
                {0,1,0,0,0,0,0,0,1,0 },
                {0,1,0,0,0,0,0,0,1,0 },
                {0,1,0,0,0,0,0,0,1,0 },
                {0,1,0,0,0,0,0,1,0,0 },
                {0,1,0,0,0,0,1,0,0,0 },
                {0,1,1,1,1,1,0,0,0,0 },
            };
        static int[,] matrixR =
                    {
                {1,1,1,0,0,0,0,0,0,0 },
                {1,1,0,1,1,0,0,0,0,0 },
                {1,1,0,0,1,1,0,0,0,0 },
                {1,1,0,0,0,1,1,0,0,0 },
                {1,1,0,0,1,1,0,0,0,0 },
                {1,1,1,1,1,0,0,0,0,0 },
                {1,1,0,1,1,0,0,0,0,0 },
                {1,1,0,0,1,1,0,0,0,0 },
                {1,1,0,0,0,1,1,0,0,0 },
                {1,1,0,0,0,0,1,1,0,0 }
            };
        static int[,] matrixK = //10 x 10
                	{
                {0,0,1,0,0,0,0,1,0,0 },
                {0,0,1,0,0,0,1,0,0,0 },
                {0,0,1,0,0,1,0,0,0,0 },
                {0,0,1,0,1,0,0,0,0,0 },
                {0,0,1,1,0,0,0,0,0,0 },
                {0,0,1,1,0,0,0,0,0,0 },
                {0,0,1,0,1,0,0,0,0,0 },
                {0,0,1,0,0,1,0,0,0,0 },
                {0,0,1,0,0,0,1,0,0,0 },
                {0,0,1,0,0,0,0,1,0,0 },
            };
        static int[,] matrixC =
                 {
                {0,0,0,0,1,1,1,0,0,0,},
                {0,0,0,1,0,0,0,1,0,0,},
                {0,0,1,0,0,0,0,0,0,0,},
                {0,0,1,0,0,0,0,0,0,0,},
                {0,0,1,0,0,0,0,0,0,0,},
                {0,0,1,0,0,0,0,0,0,0,},
                {0,0,1,0,0,0,0,0,0,0,},
                {0,0,1,0,0,0,0,0,0,0,},
                {0,0,0,1,0,0,0,1,0,0,},
                {0,0,0,0,1,1,1,0,0,0,}
            };
        static int[,] matrixY = //10x10
               	{
                {0, 1, 0, 0, 0, 0, 0, 0, 0, 1 },
                {0, 0, 1, 0, 0, 0, 0, 0, 1, 0 },
                {0, 0, 0, 1, 0, 0, 0, 1, 0, 0 },
                {0, 0, 0, 0, 1, 0, 1, 0, 0, 0 },
                {0, 0, 0, 0, 0, 1, 0, 0, 0, 0 },
                {0, 0, 0, 0, 0, 1, 0, 0, 0, 0 },
                {0, 0, 0, 0, 0, 1, 0, 0, 0, 0 },
                {0, 0, 0, 0, 0, 1, 0, 0, 0, 0 },
                {0, 0, 0, 0, 0, 1, 0, 0, 0, 0 },
                {0, 0, 0, 0, 0, 1, 0, 0, 0, 0 },
                {0, 0, 0, 0, 0, 1, 0, 0, 0, 0 }
            };
        static int[,] matrixP =
                    {
                {0,0,1,1,1,0,0,0,0,0 },
                {0,0,1,0,0,1,0,0,0,0 },
                {0,0,1,0,0,1,0,0,0,0 },
                {0,0,1,0,0,1,0,0,0,0 },
                {0,0,1,1,1,0,0,0,0,0 },
                {0,0,1,0,0,0,0,0,0,0 },
                {0,0,1,0,0,0,0,0,0,0 },
                {0,0,1,0,0,0,0,0,0,0 },
                {0,0,1,0,0,0,0,0,0,0 },
                {0,0,1,0,0,0,0,0,0,0 },
            };
        static int[,] matrixB =
                    {
                {0,0,1,1,1,0,0,0,0,0 },
                {0,0,1,0,0,1,0,0,0,0 },
                {0,0,1,0,0,1,0,0,0,0 },
                {0,0,1,0,0,1,0,0,0,0 },
                {0,0,1,1,1,0,0,0,0,0 },
                {0,0,1,0,0,1,0,0,0,0 },
                {0,0,1,0,0,1,0,0,0,0 },
                {0,0,1,0,0,1,0,0,0,0 },
                {0,0,1,1,1,0,0,0,0,0 },
                {0,0,1,0,0,0,0,0,0,0 },
            };
        static int[,] matrixU = // 10 x 10
                	{
                {0, 1, 1, 0, 0, 0, 0, 1, 1, 0},
                {0, 1, 1, 0, 0, 0, 0, 1, 1, 0},
                {0, 1, 1, 0, 0, 0, 0, 1, 1, 0},
                {0, 1, 1, 0, 0, 0, 0, 1, 1, 0},
                {0, 1, 1, 0, 0, 0, 0, 1, 1, 0},
                {0, 1, 1, 0, 0, 0, 0, 1, 1, 0},
                {0, 1, 1, 0, 0, 0, 0, 1, 1, 0},
                {0, 1, 1, 0, 0, 0, 0, 1, 1, 0},
                {0, 0, 1, 1, 1, 1, 1, 1, 0, 0},
                {0, 0, 0, 1, 1, 1, 1, 0, 0, 0},
            };
        static int[,] matrixj = // 10 x 10
                	{
                {0,0,0,0,0,0,1,0,0,0},
                {0,0,0,0,0,0,1,0,0,0},
                {0,0,0,0,0,0,1,0,0,0},
                {0,0,0,0,0,0,1,0,0,0},
                {0,0,0,0,0,0,1,0,0,0},
                {0,0,0,0,0,0,1,0,0,0},
                {0,0,0,0,0,0,1,0,0,0},
                {0,0,0,0,0,0,1,0,0,0},
                {0,0,1,0,0,0,1,0,0,0},
                {0,0,0,1,1,1,0,0,0,0}
        };
        static int[,] matrixS =
                    {
                {0,0,0,1,1,1,1,1,1,1,0,0,0 },
                {0,0,1,1,1,1,1,1,1,1,1,0,0 },
                {0,1,1,0,0,0,0,0,0,1,1,1,0 },
                {0,1,1,0,0,0,0,0,0,0,0,0,0 },
                {0,1,1,0,0,0,0,0,0,0,0,0,0 },
                {0,0,1,1,0,0,0,0,0,0,0,0,0 },
                {0,0,0,1,1,0,0,0,0,0,0,0,0 },
                {0,0,0,0,1,1,1,1,1,1,1,0,0 },
                {0,0,0,0,0,1,1,1,1,1,1,1,0 },
                {0,0,0,0,0,0,0,0,0,0,1,1,0 },
                {0,0,0,0,0,0,0,0,0,0,1,1,0 },
                {0,1,1,0,0,0,0,0,0,0,1,1,0 },
                {0,1,1,0,0,0,0,0,0,1,1,0,0 },
                {0,0,1,1,1,1,1,1,1,1,0,0,0 },
                {0,0,0,1,1,1,1,1,1,0,0,0,0 },
                {0,0,0,0,0,0,0,0,0,0,0,0,0 },
                {0,0,0,0,0,0,0,0,0,0,0,0,0 },
            };
        static int[,] matrixL = // 10 x 10
               	{
                {0,1,1,0,0,0,0,0,0,0},
                {0,1,1,0,0,0,0,0,0,0},
                {0,1,1,0,0,0,0,0,0,0},
                {0,1,1,0,0,0,0,0,0,0},
                {0,1,1,0,0,0,0,0,0,0},
                {0,1,1,0,0,0,0,0,0,0},
                {0,1,1,0,0,0,0,0,0,0},
                {0,1,1,0,0,0,0,0,0,0},
                {0,1,1,1,1,1,1,1,1,0},
                {0,1,1,1,1,1,1,1,1,0}
            };
        static int[,] matrixT =
                   {
               { 1,1,1,1,1,1,1,1,1,1 },
               { 0,0,0,0,1,1,0,0,0,0 },
               { 0,0,0,0,1,1,0,0,0,0 },
               { 0,0,0,0,1,1,0,0,0,0 },
               { 0,0,0,0,1,1,0,0,0,0 },
               { 0,0,0,0,1,1,0,0,0,0 },
               { 0,0,0,0,1,1,0,0,0,0 },
               { 0,0,0,0,1,1,0,0,0,0 },
               { 0,0,0,0,1,1,0,0,0,0 },
               { 0,0,0,0,1,1,0,0,0,0 },
            };
        static int[,] matrixG =
                    {
              {0,0,0,1,1,1,1,0,0,0},
              {0,0,1,0,0,0,0,1,0,0},
              {0,1,0,0,0,0,0,0,1,0},
              {1,0,0,0,0,0,0,0,0,1},
              {1,0,0,0,0,0,0,0,0,0},
              {1,0,0,0,1,1,1,1,1,0},
              {1,0,0,0,0,0,0,0,1,0},
              {0,1,0,0,0,0,0,0,1,0},
              {0,0,1,0,0,0,0,1,0,0},
              {0,0,0,1,1,1,1,0,0,0},


            };
        static int[,] matrixI =
                    {
                {1,1,1,1,1,1,1,1,1,1},
                {0,0,0,0,0,1,0,0,0,0},
                {0,0,0,0,0,1,0,0,0,0},
                {0,0,0,0,0,1,0,0,0,0},
                {0,0,0,0,0,1,0,0,0,0},
                {0,0,0,0,0,1,0,0,0,0},
                {0,0,0,0,0,1,0,0,0,0},
                {0,0,0,0,0,1,0,0,0,0},
                {0,0,0,0,0,1,0,0,0,0},
                {1,1,1,1,1,1,1,1,1,1}
            };
        static int[,] matrixE =

                   {

            { 0,0,1,1,1,1,1,1,0,0},
            { 0,0,1,1,1,1,1,1,0,0},
            { 0,0,1,1,0,0,0,0,0,0},
            { 0,0,1,1,0,0,0,0,0,0},
            { 0,0,1,1,1,1,1,1,0,0},
            { 0,0,1,1,1,1,1,1,0,0},
            { 0,0,1,1,0,0,0,0,0,0},
            { 0,0,1,1,0,0,0,0,0,0},
            { 0,0,1,1,1,1,1,1,0,0},
            { 0,0,1,1,1,1,1,1,0,0} };
        static int[,] matrixW =
            {
                {1,0,0,0,0,0,0,0,0,0 },
                {0,1,0,0,0,0,0,0,0,0 },
                {0,0,1,0,0,0,0,0,0,0 },
                {0,1,0,0,0,0,0,0,0,0 },
                {1,0,0,0,0,0,0,0,0,0 },
                {0,1,0,0,0,0,0,0,0,0 },
                {0,0,1,0,0,0,0,0,0,0 },
                {0,1,0,0,0,0,0,0,0,0 },
                {1,0,0,0,0,0,0,0,0,0 },
                {0,0,0,0,0,0,0,0,0,0 },
            };
        static int[,] matrixV =
            {
                {1,0,0,0,0,0,0,0,0,0},
                {0,1,0,0,0,0,0,0,0,0},
                {0,0,1,0,0,0,0,0,0,0},
                {0,1,0,0,0,0,0,0,0,0},
                {1,0,0,0,0,0,0,0,0,0},
                {0,0,0,0,0,0,0,0,0,0},
                {0,0,0,0,0,0,0,0,0,0},
                {0,0,0,0,0,0,0,0,0,0},
                {0,0,0,0,0,0,0,0,0,0},
                {0,0,0,0,0,0,0,0,0,0}

            };
        static int[,] matrixX =// 10 x 10
        	{
                {1,0,0,0,0,0,0,0,0,1 },
                {0,1,0,0,0,0,0,0,1,0 },
                {0,0,1,0,0,0,0,1,0,0 },
                {0,0,0,1,0,0,1,0,0,0 },
                {0,0,0,0,1,1,0,0,0,0 },
                {0,0,0,0,1,1,0,0,0,0 },
                {0,0,0,1,0,0,1,0,0,0 },
                {0,0,1,0,0,0,0,1,0,0 },
                {0,1,0,0,0,0,0,0,1,0 },
                {1,0,0,0,0,0,0,0,0,1 },
            };
        static int[,] matrixZ = //10x10
            {
                {0, 1, 1, 1, 1, 1, 1, 1, 1, 0 },
                {0, 0, 0, 0, 0, 0, 0, 0, 1, 0 },
                {0, 0, 0, 0, 0, 0, 0, 1, 0, 0 },
                {0, 0, 0, 0, 0, 0, 1, 0, 0, 0 },
                {0, 0, 0, 0, 0, 1, 0, 0, 0, 0 },
                {0, 0, 0, 0, 1, 0, 0, 0, 0, 0 },
                {0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },
                {0, 0, 1, 0, 0, 0, 0, 0, 0, 0 },
                {0, 1, 0, 0, 0, 0, 0, 0, 0, 0 },
                {0, 1, 1, 1, 1, 1, 1, 1, 1, 0 },
                {0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }
            };
        //Глобальный массив массивов с буквами
        static int[][,] Letters =
        {
            matrixA, matrixB, matrixC,
            matrixD, matrixE, matrixF,
            matrixG, matrixH, matrixI,
            matrixj, matrixK, matrixL,
            matrixM, matrixN, matrixO,
            matrixP, matrixQ, matrixR,
            matrixS, matrixT, matrixU,
            matrixV, matrixW, matrixX,
            matrixY, matrixZ
        };
        /// <summary>
        /// Печать текста большими буквами
        /// </summary>
        /// <param name="x">координаты X</param>
        /// <param name="y">координаты Y</param>
        /// <param name="text">англиский текст и большими буквами</param>
        static void HandMadeWrite(int x, int y, string text)
        {//текст - строка - массив букв
            for (int i = 0; i < text.Length; i++)
            {
                char symbol = text[i];//"A"
                if (symbol == ' ')
                {
                    x += 11;
                    continue;
                }
                int index = (int)symbol - 65;
                //Находим матрицу букв по индексу
                int[,] matrix = Letters[index];
                Draw(x, y, matrix);
                x += 11;
                Console.ReadKey(true);
            }
        }
        static void Draw(int x,int y,int[,]m)
        {
            for (int i = 0; i < m.GetLength(0); i++)
            {
                for (int j = 0; j < m.GetLength(1); j++)
                {
                    if (m[i, j] > 0)
                    {
                        Console.SetCursorPosition(x + j, y + i);
                        Console.Write("█");//alt + numlock 219
                    }
                }
            }
        }
        static void Main(string[] args)
        {
            HandMadeWrite(10, 10, "TIROZIT");
            Console.ReadLine();
        }
    }
}
